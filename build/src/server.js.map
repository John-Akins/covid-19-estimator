{"version":3,"sources":["../../src/server.js"],"names":["http","config","app","normalizePort","val","port","parseInt","isNaN","process","env","PORT","set","server","createServer","errorHandler","error","syscall","code","exit","on","listen"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CAAyB;AACzB,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEAD,OAAOA,MAAP;;AAEA;AACA;AACA,MAAME,gBAAiBC,GAAD,IAAS;AAC7B,QAAMC,OAAOC,SAASF,GAAT,EAAc,EAAd,CAAb;;AAEA;AACA,MAAIG,MAAMF,IAAN,CAAJ,EAAiB;AACf,WAAOD,GAAP;AACD;AACD,MAAIC,QAAQ,CAAZ,EAAe;AACb,WAAOA,IAAP;AACD;AACD,SAAO,KAAP;AACD,CAXD;;AAaA,MAAMA,OAAOF,cAAcK,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAlC,CAAb;;AAEAR,IAAIS,GAAJ,CAAQ,MAAR,EAAgBN,IAAhB;;AAEA,MAAMO,SAASZ,KAAKa,YAAL,CAAkBX,GAAlB,CAAf;;AAEA;AACA;AACA,MAAMY,eAAgBC,KAAD,IAAW;AAC9B,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AAED,UAAQA,MAAME,IAAd;AACE,SAAK,QAAL;AACET,cAAQU,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACEV,cAAQU,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMH,KAAN;AARJ;AAUD,CAfD;;AAiBAH,OAAOO,EAAP,CAAU,OAAV,EAAmBL,YAAnB;;AAEA;AACAF,OAAOQ,MAAP,CAAcf,IAAd","file":"server.js","sourcesContent":["import http from 'http'; // import Node native http package\nimport config from 'dotenv';\nimport app from './app';\n\nconfig.config();\n\n// returns a valid port\n// whether port is passed as number or a string\nconst normalizePort = (val) => {\n  const port = parseInt(val, 10);\n\n  // eslint-disable-next-line no-restricted-globals\n  if (isNaN(port)) {\n    return val;\n  }\n  if (port >= 0) {\n    return port;\n  }\n  return false;\n};\n\nconst port = normalizePort(process.env.PORT || '8080');\n\napp.set('port', port);\n\nconst server = http.createServer(app);\n\n// checks for various errors and handles them appropriately,\n// also registers them to the server\nconst errorHandler = (error) => {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  switch (error.code) {\n    case 'EACCES':\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n};\n\nserver.on('error', errorHandler);\n\n// set server to listen with either production or local port\nserver.listen(port);\n"]}