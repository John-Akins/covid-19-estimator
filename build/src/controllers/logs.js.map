{"version":3,"sources":["../../../src/controllers/logs.js"],"names":["logsController","getLoggedRequests","req","res","query","text","db","then","data","responseUtility","success","catch","error","logNewRequest","requesTime","baseUrl","duration","Date","now","values","response","rows"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,cAAc,GAAG,EAAvB;;AAEAA,cAAc,CAACC,iBAAf,GAAmC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/C,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE;AADM,GAAd;;AAGAC,cAAGF,KAAH,CAASA,KAAT,EACGG,IADH,CACSC,IAAD,IAAU;AACdC,6BAAgBC,OAAhB,CAAwBP,GAAxB,EAA6BK,IAA7B;AACD,GAHH,EAIGG,KAJH,CAIUC,KAAD,IAAW;AAChBH,6BAAgBG,KAAhB,CAAsBT,GAAtB,EAA2B,GAA3B,EAAgC,mDAAhC;AACD,GANH;AAOD,CAXD;;AAaAH,cAAc,CAACa,aAAf,GAA+B,CAACX,GAAD,EAAMC,GAAN,KAAc;AAC3C,QAAM;AAAEW,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0Bb,GAAhC;AACA,QAAMc,QAAQ,GAAG,CAACC,IAAI,CAACC,GAAL,KAAaJ,UAAd,IAA4B,IAA7C;AAEA,QAAMV,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,wEADM;AAEZc,IAAAA,MAAM,EAAE,CAACL,UAAD,EAAaC,OAAb,EAAsBC,QAAtB;AAFI,GAAd;;AAIAV,cAAGF,KAAH,CAASA,KAAT,EACGG,IADH,CACSa,QAAD,IAAc;AAClBX,6BAAgBC,OAAhB,CAAwBP,GAAxB,EAA6BiB,QAAQ,CAACC,IAAtC;AACD,GAHH,EAIGV,KAJH,CAIUC,KAAD,IAAWH,yBAAgBG,KAAhB,CAAsBT,GAAtB,EAA2B,GAA3B,EAAgC,mDAAhC,CAJpB;AAKD,CAbD;;eAeeH,c","sourcesContent":["import responseUtility from '../utilities/responseUtility';\nimport db from '../db';\n\nconst logsController = {};\n\nlogsController.getLoggedRequests = (req, res) => {\n  const query = {\n    text: 'SELECT * FROM logs'\n  };\n  db.query(query)\n    .then((data) => {\n      responseUtility.success(res, data);\n    })\n    .catch((error) => {\n      responseUtility.error(res, 400, 'someting went wrong while processing your request');\n    });\n};\n\nlogsController.logNewRequest = (req, res) => {\n  const { requesTime, baseUrl } = req;\n  const duration = (Date.now() - requesTime) / 1000;\n\n  const query = {\n    text: 'INSERT INTO logs (\"timestamp\", \"url\", \"duration\") values  ($1, $2, $3)',\n    values: [requesTime, baseUrl, duration]\n  };\n  db.query(query)\n    .then((response) => {\n      responseUtility.success(res, response.rows);\n    })\n    .catch((error) => responseUtility.error(res, 400, 'someting went wrong while processing your request'));\n};\n\nexport default logsController;\n"],"file":"logs.js"}